{"version":3,"sources":["components/MenuTop.js","components/Project.js","components/ProjectsPage.js","components/Task.js","components/BoardsPage.js","components/Portal.js","components/Modal.js","components/CreateProjectForm.js","components/CreateBoardForm.js","components/CreateTaskForm.js","components/EditTaskForm.js","functions/functions.js","components/App.js","index.js"],"names":["MenuTop","react_default","a","createElement","className","href","type","Project","_ref","project","index","history","react_beautiful_dnd_esm","draggableId","concat","id","provided","Object","assign","onClick","push","draggableProps","dragHandleProps","ref","innerRef","title","ProjectsPage","projects","projectsOrder","changeProjectPosition","handleModalOpen","onDragEnd","_ref2","source","destination","droppableId","direction","droppableProps","map","components_Project","key","placeholder","Task","task","setTaskEditId","snapshot","isDragging","console","log","description","BoardsPage","projectTitle","boards","boardsOrder","tasks","setTaskCreateBoardId","changeTaskPosition","boardId","tasksOrder","taskId","components_Task","Portal","portalElement","document","componentDidMount","body","appendChild","_this","componentWillUnmount","removeChild","children","this","props","ReactDOM","createPortal","React","Component","Modal","Fragment","isOpen","components_Portal","handleClose","handleSubmit","CreateProjectForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","length","addNewProject","handleModalClose","setState","handleProjectTitleChange","event","target","value","_this2","components_Modal","modalIsOpen","name","onChange","required","CreateBoardForm","_this$props","addNewBoard","projectId","boardTitle","handleBoardTitleChange","_this$props2","CreateTaskForm","addNewTask","_this$state","taskTitle","taskDescription","handleTaskTitleChange","handleTaskDescriptionChange","_this$state2","EditTaskForm","editTask","complete","handleTitleChange","handleDescriptionChange","handleCompleteChange","prevState","nextProps","checked","calculateNewId","object","maxId","App","componentDidUpdate","saveState","JSON","stringify","objectSpread","toConsumableArray","localStorage","setItem","taskCreateBoardId","taskEditId","formType","projectCreateFormIsOpen","boardCreateFormIsOpen","taskCreateFormIsOpen","taskEditFormIsOpen","warn","newProjectId","unshift","oldPosition","newPosition","splice","newBoardId","_this$state3","newTaskId","sIndex","dIndex","sDropId","dDropId","getItem","parse","_this$state4","components_MenuTop","react_router","path","exact","render","components_ProjectsPage","components_CreateProjectForm","match","params","components_BoardsPage","components_CreateBoardForm","components_CreateTaskForm","components_EditTaskForm","react_router_dom","components_App","getElementById"],"mappings":"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","file":"static/js/main.60c3c8a1.chunk.js","sourcesContent":["import React from 'react';\n\nimport '../styles/css/top_menu.css';\n\nconst MenuTop = () => (\n  <nav className=\"topMenu\">\n    <div className=\"topMenu__topLeftMenu topLeftMenu\">\n      <a href=\"/\" className=\"topLeftMenu__btn\">\n        H\n      </a>\n      <div className=\"topLeftMenu__btn topLeftMenu__btn--boardsLink\">\n        &#xE90A;\n      </div>\n      <div className=\"topLeftMenu__btn\">\n        <input type=\"search\" className=\"topLeftMenu__btn--searchInput\"></input>\n        Q\n      </div>\n    </div>\n\n    <div className=\"topMenu__logo\">\n      Trial Trello\n    </div>\n\n    <div className=\"topMenu__topRightMenu topRightMenu\">\n      <div className=\"topRightMenu__btn\">\n        +\n      </div>\n      <div className=\"topRightMenu__btn\">\n        i\n      </div>\n      <div className=\"topRightMenu__btn\">\n        R\n      </div>\n    </div>\n  </nav>\n)\n\nexport default MenuTop;\n\n\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Project = ({ project, index, history }) => {\n  return (\n    <Draggable draggableId={`${project.id}`} index={index}>\n      {(provided) => {\n        return (\n        <div\n          className=\"project\"\n          onClick={() => history.push(`/project-${project.id}`)}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <h4 className=\"project__title\">{project.title}</h4>\n        </div>\n      )}}\n    </Draggable>\n  )\n}\n\nexport default Project;\n","import React from 'react';\nimport Project from './Project';\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport '../styles/css/project_page.css';\n\nconst ProjectsPage = ({ projects, projectsOrder, changeProjectPosition, history, handleModalOpen }) => {\n  const onDragEnd = ({ source, destination }) => {\n    if (!destination || source.index === destination.index) return;\n\n    changeProjectPosition(source.index, destination.index);\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"projects-area\" direction=\"horizontal\">\n        {(provided) => (\n          <div className=\"projectsWindow\"\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n          >\n            {projectsOrder.map( (project, index) => (\n              <Project\n                key={projects[project].id}\n                project={projects[project]}\n                index={index}\n                history={history}\n              />\n            ))}\n            {provided.placeholder}\n\n            <div\n              className=\"project project--new\"\n              onClick={() => handleModalOpen('project')}\n            >\n              <h4 className=\"project__title\">Create new project</h4>\n            </div>\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n\nexport default ProjectsPage;\n\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Task = ({ task, index, setTaskEditId, handleModalOpen}) => (\n  <Draggable draggableId={`${task.id}`} index={index}>\n    {(provided, snapshot) => (\n      <div\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        ref={provided.innerRef}\n        onClick={() => { setTaskEditId(task.id); handleModalOpen('taskEdit')}}\n        className=\"taskWindow__task task\"\n      >\n        {snapshot.isDragging && console.log(snapshot.isDragging)}\n        <h4 className=\"task__title\">{task.title}</h4>\n        <p className=\"task__description\">{task.description}</p>\n      </div>\n    )}\n  </Draggable>\n);\n\nexport default Task;\n\n","import React from 'react';\nimport Task from './Task';\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport '../styles/css/boards_page.css';\n\nconst BoardsPage = ({ projectTitle, boards, boardsOrder, tasks,\n  handleModalOpen, setTaskCreateBoardId, changeTaskPosition, setTaskEditId }) => {\n\n  const onDragEnd = ({ source, destination }) => {\n\n    if (!destination\n      || (source.index === destination.index\n      && source.droppableId === destination.droppableId)) return;\n\n    changeTaskPosition(source.index, destination.index, source.droppableId, destination.droppableId);\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"boardsWindow\">\n        <h2 className=\"boardsWindow__header\">{`Project:  ${projectTitle}`}</h2>\n\n        <div className=\"boardsWindow__boards\">\n          {boardsOrder.map( boardId => (\n            <Droppable key={boards[boardId].id} droppableId={`${boards[boardId].id}`}>\n              {(provided) => (\n                <div\n                  key={boards[boardId].id}\n                  className=\"board\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  <h3 className=\"board__title\">{boards[boardId].title}</h3>\n\n                  <div className=\"board__taskWindow taskWindow\">\n                    {boards[boardId].tasksOrder.map((taskId, index) => (\n                      <Task\n                        key={tasks[`${taskId}`].id}\n                        task={tasks[`${taskId}`]}\n                        index={index}\n                        setTaskEditId={setTaskEditId}\n                        handleModalOpen={handleModalOpen}\n                      />\n                    ))}\n                    {provided.placeholder}\n                  </div>\n\n                  <p\n                    className=\"board__newtask\"\n                    onClick={() => {setTaskCreateBoardId(boards[boardId].id); handleModalOpen('task')}}\n                  >\n                    + add new task\n                  </p>\n                </div>\n              )}\n            </Droppable>\n          ))}\n          <div\n            className=\"board board--new\"\n            onClick={() => handleModalOpen('board')}\n          >\n            <h4 className=\"board__title\">Create new board</h4>\n          </div>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n}\n\nexport default BoardsPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Portal extends React.Component {\n  portalElement = document.createElement('div');\n\n  componentDidMount = () => {\n    document.body.appendChild(this.portalElement);\n  }\n\n  componentWillUnmount = () => {\n    document.body.removeChild(this.portalElement);\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return ReactDOM.createPortal(children, this.portalElement);\n  }\n}\n\nexport default Portal;\n","import React from 'react';\nimport Portal from './Portal';\n\nimport '../styles/css/modal.css';\n\nconst Modal = (props) => (\n  <>\n    {props.isOpen &&\n    <Portal>\n      <div className=\"overlay\">\n        <div className=\"modalWindow\">\n          <div className=\"modalWindow__header\">\n            <h3 className=\"header__title\">\n              {props.title}\n            </h3>\n            <button type=\"button\" className=\"header__closeBtn\" onClick={() => props.handleClose()}>\n              X\n            </button>\n          </div>\n          <div className=\"modalWindow__body\">\n            {props.children}\n          </div>\n          <div className=\"modalWindow__footer\">\n            <button type=\"button\" className=\"footer__closeBtn\" onClick={() => props.handleClose()}>\n              Close\n            </button>\n            <button type=\"button\" className=\"footer__submitBtn\" onClick={() => props.handleSubmit()}>\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </Portal>}\n  </>\n);\n\nexport default Modal;\n","import React from 'react';\nimport Modal from './Modal';\n\nimport '../styles/css/create_form.css';\n\nclass CreateProjectForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projectTitle: '',\n    }\n  }\n\n  handleSubmit = () => {\n    if (this.state.projectTitle.length > 0) {\n      this.props.addNewProject(this.state.projectTitle);\n      this.props.handleModalClose('project');\n      this.setState({projectTitle: ''});\n    }\n  }\n\n  handleProjectTitleChange = (event) => {\n    let projectTitle = event.target.value;\n\n    projectTitle = projectTitle.length > 255\n      ? this.state.projectTitle\n      : projectTitle;\n\n    this.setState({projectTitle});\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen = {this.props.modalIsOpen}\n        title = \"New Procect Creation\"\n        handleClose = {() => this.props.handleModalClose('project')}\n        handleSubmit = {() => this.handleSubmit()}\n      >\n        <input\n          className=\"projectTitleInput\"\n          type=\"text\"\n          name=\"title\"\n          value={this.state.projectTitle}\n          onChange={(event) => this.handleProjectTitleChange(event)}\n          required\n        />\n        <p className=\"projectTitleLength\">{255 - this.state.projectTitle.length} symbols left</p>\n      </Modal>\n    )\n  }\n}\n\nexport default CreateProjectForm;\n\n","import React from 'react';\nimport Modal from './Modal';\n\nimport '../styles/css/create_form.css';\n\nclass CreateBoardForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      boardTitle: '',\n    }\n  }\n\n  handleSubmit = () => {\n    const { addNewBoard, projectId, handleModalClose } = this.props;\n    const { boardTitle } = this.state;\n\n    if (boardTitle.length > 0) {\n      addNewBoard(projectId, boardTitle);\n      handleModalClose('board');\n      this.setState({boardTitle: ''});\n    }\n  }\n\n  handleBoardTitleChange = (event) => {\n    let boardTitle = event.target.value;\n\n    boardTitle = boardTitle.length > 255\n      ? this.state.boardTitle\n      : boardTitle;\n\n    this.setState({boardTitle});\n  }\n\n  render() {\n    const { modalIsOpen, handleModalClose } = this.props;\n    const { boardTitle } = this.state;\n\n    return (\n      <Modal\n        isOpen = {modalIsOpen}\n        title = \"New Board Creation\"\n        handleClose = {() => handleModalClose('board')}\n        handleSubmit = {() => this.handleSubmit()}\n      >\n        <input\n          className=\"boardTitleInput\"\n          type=\"text\"\n          name=\"title\"\n          value={boardTitle}\n          onChange={(event) => this.handleBoardTitleChange(event)}\n          required\n        />\n        <p className=\"boardTitleLength\">{255 - boardTitle.length} symbols left</p>\n      </Modal>\n    )\n  }\n}\n\nexport default CreateBoardForm;\n","import React from 'react';\nimport Modal from './Modal';\n\nimport '../styles/css/create_form.css';\n\nclass CreateTaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      taskTitle: '',\n      taskDescription: '',\n    }\n  }\n\n  handleSubmit = () => {\n    const { addNewTask, handleModalClose } = this.props;\n    const { taskTitle, taskDescription } = this.state;\n\n    if (taskTitle.length > 0) {\n      addNewTask(taskTitle, taskDescription);\n      handleModalClose('task');\n      this.setState({taskTitle: '', taskDescription: ''});\n    }\n  }\n\n  handleTaskTitleChange = (event) => {\n    let taskTitle = event.target.value;\n\n    taskTitle = taskTitle.length > 255\n      ? this.state.taskTitle\n      : taskTitle;\n\n    this.setState({taskTitle});\n  }\n\n  handleTaskDescriptionChange = (event) => {\n    let taskDescription = event.target.value;\n\n    taskDescription = taskDescription.length > 255\n      ? this.state.taskDescription\n      : taskDescription;\n\n    this.setState({taskDescription});\n  }\n\n  render() {\n    const { modalIsOpen, handleModalClose } = this.props;\n    const { taskTitle, taskDescription } = this.state;\n\n    return (\n      <Modal\n        isOpen = {modalIsOpen}\n        title = \"New Task Creation\"\n        handleClose = {() => handleModalClose('task')}\n        handleSubmit = {() => this.handleSubmit()}\n      >\n        <input\n          className=\"taskTitleInput\"\n          type=\"text\"\n          name=\"title\"\n          value={taskTitle}\n          onChange={(event) => this.handleTaskTitleChange(event)}\n          placeholder=\"Enter task title\"\n        />\n        <p className=\"taskTitleLength\">{255 - taskTitle.length} symbols left</p>\n\n        <input\n          className=\"taskDescriptionInput\"\n          type=\"text\"\n          name=\"description\"\n          value={taskDescription}\n          onChange={(event) => this.handleTaskDescriptionChange(event)}\n          placeholder=\"Enter task description\"\n          required\n        />\n        <p className=\"taskDescriptionLength\">{255 - taskDescription.length} symbols left</p>\n      </Modal>\n    )\n  }\n}\n\nexport default CreateTaskForm;\n\n","import React from 'react';\nimport Modal from './Modal';\n\nimport '../styles/css/create_form.css';\n\nclass EditTaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: null,\n      title: \"\",\n      description: \"\",\n      complete: false,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props !== nextProps) {\n      this.setState({\n        id: nextProps.task.id,\n        title: nextProps.task.title,\n        description: nextProps.task.description,\n        complete: nextProps.task.complete\n      });\n    }\n  }\n\n  handleSubmit = () => {\n    const { editTask, handleModalClose } = this.props;\n    const { id, title, description, complete } = this.state;\n\n    if (title.length > 0) {\n      editTask(id, title, description, complete);\n      handleModalClose('taskEdit');\n      this.setState({id: null, title: '', description: '', complete: false, });\n    }\n  }\n\n  handleTitleChange = (event) => {\n    let title = event.target.value;\n\n    title = title.length > 255\n      ? this.state.title\n      : title;\n\n    this.setState({title});\n  }\n\n  handleDescriptionChange = (event) => {\n    let description = event.target.value;\n\n    description = description.length > 255\n      ? this.state.description\n      : description;\n\n    this.setState({description});\n  }\n\n  handleCompleteChange = () => {\n    this.setState(prevState => ({complete: !prevState.complete}));\n  }\n\n  render() {\n    const { modalIsOpen, handleModalClose } = this.props;\n    const { title, description, complete } = this.state;\n\n    return (\n      <Modal\n        isOpen = {modalIsOpen}\n        title = \"Edit Task\"\n        handleClose = {() => handleModalClose('taskEdit')}\n        handleSubmit = {() => this.handleSubmit()}\n      >\n        <input\n          className=\"taskTitleInput\"\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={(event) => this.handleTitleChange(event)}\n          placeholder=\"Enter task title\"\n        />\n        <p className=\"taskTitleLength\">{255 - title.length} symbols left</p>\n\n        <input\n          className=\"taskDescriptionInput\"\n          type=\"text\"\n          name=\"description\"\n          value={description}\n          onChange={(event) => this.handleDescriptionChange(event)}\n          placeholder=\"Enter task description\"\n          required\n        />\n        <p className=\"taskDescriptionLength\">{255 - description.length} symbols left</p>\n\n        <label>\n          Complete:\n          <input\n            type=\"checkbox\"\n            name=\"taskComplete\"\n            checked={complete}\n            onChange={() => this.handleCompleteChange()}\n          />\n        </label>\n      </Modal>\n    )\n  }\n}\n\nexport default EditTaskForm;\n\n","export const calculateNewId = (object) => {\n  let maxId = 0;\n\n  for (let key in object) {\n    maxId = object[key].id > maxId\n      ? object[key].id\n      : maxId;\n  }\n\n  return maxId + 1;\n}\n\n\n\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport MenuTop from './MenuTop';\nimport ProjectsPage from './ProjectsPage';\nimport BoardsPage from './BoardsPage';\nimport CreateProjectForm from './CreateProjectForm';\nimport CreateBoardForm from './CreateBoardForm';\nimport CreateTaskForm from './CreateTaskForm';\nimport EditTaskForm from './EditTaskForm';\n\nimport { calculateNewId } from '../functions/functions';\n\nimport '../styles/css/reset.css';\nimport '../styles/css/app.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = localStorage.getItem('trello-clone')\n    ? {\n      projects: {...JSON.parse(localStorage.getItem('trello-clone')).projects},\n      boards: {...JSON.parse(localStorage.getItem('trello-clone')).boards},\n      tasks: {...JSON.parse(localStorage.getItem('trello-clone')).tasks},\n      projectsOrder: [...JSON.parse(localStorage.getItem('trello-clone')).projectsOrder],\n      projectCreateFormIsOpen: false,\n      boardCreateFormIsOpen: false,\n      taskCreateFormIsOpen: false,\n      taskEditFormIsOpen: false,\n      taskCreateBoardId: null,\n      taskEditId: null,\n    }\n    : {\n      projects: {},\n      boards: {},\n      tasks: {},\n      projectsOrder: [],\n      projectCreateFormIsOpen: false,\n      boardCreateFormIsOpen: false,\n      taskCreateFormIsOpen: false,\n      taskEditFormIsOpen: false,\n      taskCreateBoardId: null,\n      taskEditId: null,\n    }\n  }\n\n  componentDidUpdate = () => {\n    this.saveState();\n  }\n\n  saveState = () => {\n    const state = JSON.stringify({\n      projects: {...this.state.projects},\n      boards: {...this.state.boards},\n      tasks: {...this.state.tasks},\n      projectsOrder: [...this.state.projectsOrder],\n    });\n    localStorage.setItem('trello-clone', state);\n  }\n\n  setTaskCreateBoardId = (id) => {\n    this.setState({taskCreateBoardId: id});\n  }\n\n  setTaskEditId = (id) => {\n    this.setState({taskEditId: id});\n  }\n\n  handleModalOpen = (formType) => {\n    switch (formType) {\n      case 'project': this.setState({projectCreateFormIsOpen: true}); break;\n      case 'board': this.setState({boardCreateFormIsOpen: true}); break;\n      case 'task': this.setState({taskCreateFormIsOpen: true}); break;\n      case 'taskEdit': this.setState({taskEditFormIsOpen: true}); break;\n      default: console.warn('Incorrect form type in handleModalOpen');\n    }\n  }\n\n  handleModalClose = (formType) => {\n    switch (formType) {\n      case 'project': this.setState({projectCreateFormIsOpen: false}); break;\n      case 'board': this.setState({boardCreateFormIsOpen: false}); break;\n      case 'task': this.setState({taskCreateFormIsOpen: false}); break;\n      case 'taskEdit': this.setState({taskEditFormIsOpen: false}); break;\n      default: console.warn('Incorrect form type in handleModalClose');\n    }\n  }\n\n  addNewProject = (title) => {\n    const { projects, projectsOrder } = this.state;\n    const newProjectId = calculateNewId(projects);\n\n    projects[`${newProjectId}`] = {\n      id: newProjectId,\n      title,\n      boardsOrder: [],\n    }\n\n    projectsOrder.unshift(`${newProjectId}`);\n\n    this.setState({ projects, projectsOrder });\n  }\n\n  changeProjectPosition = (oldPosition, newPosition) => {\n    const { projectsOrder } = this.state;\n    const project = projectsOrder.splice(oldPosition, 1);\n    projectsOrder.splice(newPosition, 0, project);\n\n    this.setState({ projectsOrder });\n  }\n\n  addNewBoard = (projectId, title) => {\n    const { projects, boards} = this.state;\n    const newBoardId = calculateNewId(boards);\n\n    projects[`${projectId}`].boardsOrder.push(`${newBoardId}`);\n    boards[`${newBoardId}`] = {\n      id: newBoardId,\n      title,\n      tasksOrder: [],\n    }\n\n    this.setState({ boards, projects });\n  }\n\n  addNewTask = (title, description) => {\n    const boardId = this.state.taskCreateBoardId;\n    const {boards, tasks} = this.state;\n    const newTaskId = calculateNewId(tasks);\n\n    boards[boardId].tasksOrder.push(`${newTaskId}`);\n    tasks[`${newTaskId}`] = {\n      id: newTaskId,\n      title,\n      description,\n      complete: false,\n    };\n\n    this.setState({ boards, tasks });\n  }\n\n  editTask = (id, title, description, complete) => {\n    const { tasks } = this.state;\n\n    tasks[`${id}`].title = title;\n    tasks[`${id}`].description = description;\n    tasks[`${id}`].complete = complete;\n\n    this.setState({tasks});\n  }\n\n  changeTaskPosition = (sIndex, dIndex, sDropId, dDropId) => {\n    const { boards } = this.state;\n\n    boards[dDropId].tasksOrder.splice(dIndex, 0, boards[sDropId].tasksOrder.splice(sIndex, 1));\n\n    this.saveState();\n  }\n\n  render() {\n    const {projects, projectsOrder, boards, tasks} = this.state;\n\n    return (\n      <>\n        <header>\n          <MenuTop />\n        </header>\n\n        <main>\n          <Switch>\n            <Route path='/' exact\n              render={({ history }) => (\n                <>\n                  <ProjectsPage\n                    projects={projects}\n                    projectsOrder={projectsOrder}\n                    history={history}\n                    handleModalOpen={this.handleModalOpen}\n                    changeProjectPosition={this.changeProjectPosition}\n                  />\n                  <CreateProjectForm\n                    addNewProject={this.addNewProject}\n                    modalIsOpen={this.state.projectCreateFormIsOpen}\n                    handleModalClose={this.handleModalClose}\n                  />\n                </>\n              )}\n            />\n\n            <Route path='/project-:projectId'\n              render={({ match }) => {\n                const projectId = match.params.projectId;\n                return (\n                  <>\n                    <BoardsPage\n                      projectTitle={projects[projectId].title}\n                      boards={boards}\n                      boardsOrder={projects[projectId].boardsOrder}\n                      tasks={tasks}\n                      handleModalOpen={this.handleModalOpen}\n                      setTaskCreateBoardId={this.setTaskCreateBoardId}\n                      changeTaskPosition={this.changeTaskPosition}\n                      setTaskEditId={this.setTaskEditId}\n                    />\n\n                    <CreateBoardForm\n                      projectId={projectId}\n                      addNewBoard={this.addNewBoard}\n                      modalIsOpen={this.state.boardCreateFormIsOpen}\n                      handleModalClose={this.handleModalClose}\n                    />\n\n                    <CreateTaskForm\n                      addNewTask={this.addNewTask}\n                      modalIsOpen={this.state.taskCreateFormIsOpen}\n                      handleModalClose={this.handleModalClose}\n                    />\n\n                    <EditTaskForm\n                      task={tasks[this.state.taskEditId]}\n                      editTask={this.editTask}\n                      handleModalClose={this.handleModalClose}\n                      modalIsOpen={this.state.taskEditFormIsOpen}\n                    />\n                  </>\n                );\n              }}\n            />\n          </Switch>\n        </main>\n\n        <footer>\n\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}